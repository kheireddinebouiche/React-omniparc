rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Fonctions utilitaires
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function isClient() {
      return isAuthenticated() && getUserData().role == 'CLIENT';
    }
    
    function isProfessional() {
      return isAuthenticated() && getUserData().role == 'PROFESSIONAL';
    }
    
    function isBusiness() {
      return isAuthenticated() && getUserData().role == 'BUSINESS';
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN';
    }
    
    function isEquipmentOwner(equipmentId) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/equipment/$(equipmentId)).data.ownerId == request.auth.uid;
    }
    
    function isRentalRequestOwner(requestId) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/rentalRequests/$(requestId)).data.userId == request.auth.uid;
    }
    
    function isEquipmentAvailable(equipmentId) {
      return get(/databases/$(database)/documents/equipment/$(equipmentId)).data.isAvailable == true;
    }
    
    // Règles pour la collection users
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAdmin() || (isAuthenticated() && request.auth.uid == userId);
      allow delete: if isAdmin();
    }
    
    // Règles pour la collection equipment
    match /equipment/{equipmentId} {
      allow read: if true;
      allow create: if isAuthenticated() && (isProfessional() || isBusiness() || isAdmin());
      allow update: if isEquipmentOwner(equipmentId) || isAdmin();
      allow delete: if isEquipmentOwner(equipmentId) || isAdmin();
    }
    
    // Règles pour la collection rentalRequests
    match /rentalRequests/{requestId} {
      allow read: if isAuthenticated() && 
        (isRentalRequestOwner(requestId) || 
         isEquipmentOwner(get(/databases/$(database)/documents/rentalRequests/$(requestId)).data.equipmentId) ||
         isAdmin());
      allow create: if isAuthenticated() && 
        (isEquipmentAvailable(request.resource.data.equipmentId) || isAdmin());
      allow update: if isAuthenticated() && 
        (isRentalRequestOwner(requestId) || 
         isEquipmentOwner(get(/databases/$(database)/documents/rentalRequests/$(requestId)).data.equipmentId) ||
         isAdmin());
      allow delete: if isAdmin();
    }
    
    // Règles pour la collection categories
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Règles pour la collection reviews
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isAuthenticated() && 
        (request.resource.data.userId == request.auth.uid || isAdmin());
      allow update: if isAuthenticated() && 
        (get(/databases/$(database)/documents/reviews/$(reviewId)).data.userId == request.auth.uid || isAdmin());
      allow delete: if isAdmin();
    }
    
    // Règles pour la collection notifications
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && 
        (get(/databases/$(database)/documents/notifications/$(notificationId)).data.userId == request.auth.uid || isAdmin());
      allow create: if isAuthenticated() || isAdmin();
      allow update: if isAuthenticated() && 
        (get(/databases/$(database)/documents/notifications/$(notificationId)).data.userId == request.auth.uid || isAdmin());
      allow delete: if isAuthenticated() && 
        (get(/databases/$(database)/documents/notifications/$(notificationId)).data.userId == request.auth.uid || isAdmin());
    }
    
    // Règles pour les autres collections
    match /{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
  }
} 